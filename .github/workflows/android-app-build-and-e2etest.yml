name: android-app-build-and-e2etest

on:
  push:
    branches: [happybirthday-app]
  workflow_dispatch:

jobs:
  build-and-e2etest:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install node package from dependency
        run: |
          cd __e2e__
          npm ci

      - name: Check environment by appium-doctor
        run: |
          cd __e2e__
          npm run doctor

      - name: Check VM acceleration
        run: kextstat | grep intel

      - name: Build apk
        run: |
          chmod +x gradlew
          ./gradlew assembleDebug

      - name: Create AVD
        run: |
          SYSTEM_IMAGES="system-images;android-28;default;x86"
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "$SYSTEM_IMAGES"
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"

      - name: Start android emulator
        # https://developer.android.com/studio/run/emulator-commandline
        run: |
          mkdir ~/log
          $ANDROID_HOME/emulator/emulator -avd test -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim >> ~/log/emulator.log &

      - name: Wait for boot
        run: |
          while [ "`adb shell getprop sys.boot_completed | tr -d '\r'`" != "1" ] ; do sleep 10 && echo "wait for boot..."; done

      - name: Disable emulator animation
        run: |
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0

      - name: Start appium server
        run: |
          cd __e2e__
          npm run s:appium >> ~/log/appium.log &

      - name: Execute e2e test
        run: |
          sleep 10
          cd __e2e__
          npm run s:test

      - name: Archive emulator and appium server logs
        uses: actions/upload-artifact@v2
        with:
          name: log
          path: ~/log
